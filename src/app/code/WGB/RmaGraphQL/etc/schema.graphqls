
type Mutation {
    createReturnRequest(input: CreateReturnInput!): CreateReturnOutput
    @resolver(class: "WGB\\RmaGraphQL\\Model\\Resolver\\CreateNewRequest")
}

type Query {
    itemConditions: [ItemCondition]
    @resolver(class: "WGB\\RmaGraphQL\\Model\\Resolver\\ItemConditionsResolver")
    returnResolutions: [ReturnResolution]
    @resolver(class: "WGB\\RmaGraphQL\\Model\\Resolver\\ReturnResolutionsResolver")
    returnReasons: [ReturnReason]
    @resolver(class: "WGB\\RmaGraphQL\\Model\\Resolver\\ReturnReasonsResolver")
#    returnCarriers: [ReturnCarrier]
#    @resolver(class: "WGB\\RmaGraphQL\\Model\\Resolver\\ReturnCarriersResolver")
    returnList: [ReturnListEntry]
    @resolver(class: "WGB\\RmaGraphQL\\Model\\Resolver\\ReturnsForUserResolver")
    returnDetailsById(return_id: Int): ReturnDetails
    @resolver(class: "WGB\\RmaGraphQL\\Model\\Resolver\\ReturnDetailsResolver")
}

type ReturnCarrier {
    success: Int
}

type ReturnDetails {
    id: String
    order_id: String
    created_at: String
    status: Int
    items: [ReturnItemDetails] @resolver(class: "WGB\\RmaGraphQL\\Model\\Resolver\\ReturnItemsResolver")
}

type ReturnItemDetails {
    discount_amount: Float
    discount_percent: Float
    item_id: String
    price: Float
    product: OrderProduct
    qty: Float
    row_total: Float
    sku: String
    tax_amount: Float
    tax_percent: Float
    reason: ReturnReason
    condition: ItemCondition
    resolution: ReturnResolution
    status: Int
}

type ReturnListEntry {
    order_id: String
    request_id: String
    created_at: String
    status_id: String
    status_label: String
    request_qty: Float
}

input CreateReturnInput {
    order_id: String!
    custom_fields: [String]
    items: [ReturnItemInput]!
}

type CreateReturnOutput {
    return_id: String
}

input ReturnItemInput {
    quote_item_id: Int!
    qty: Float!
    condition: Int!
    reason: Int!
    resolution: Int!
}

type ReturnReason {
    reason_id: Int
    title: String
    payer: Int @doc(description: "0 - Customer; 1 - Shop owner; 2 - Do not show")
    position: Int
    label: String
}

type ItemCondition {
    condition_id: Int
    title: String
    position: Int
    label: String
}

type ReturnResolution {
    resolution_id: Int
    title: String
    position: Int
    label: String
}

type Order {
    order_products: [OrderProduct] @resolver(class: "WGB\\RmaGraphQL\\Model\\Resolver\\ProductResolver")
}

type OrderProduct implements ProductInterface {
    quote_item_id: String
}
